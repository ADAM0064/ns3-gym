syntax = "proto3";
import "google/protobuf/any.proto";

package ns3opengym;

//---------Types----------//
enum MsgType {
	Unknown = 0;
	Init = 1;
	ActionSpace = 2;
	ObservationSpace = 3;
	IsGameOver = 4;
	Observation = 5;
	Reward = 6;
	ExtraInfo = 7;
	Action = 8;
	StopEnv = 9;
}

enum SpaceType {
	Discrete = 0;
	Box = 1;
	Tuple = 2;
	Dict = 3;
}

enum Dtype {
	INT = 0;
	UINT = 1;
	FLOAT = 2;
	DOUBLE = 3;
}
//------------------------//

//---Space Descriptions---//
message SpaceDescription {
	SpaceType type = 1;
	google.protobuf.Any space = 2;
	string name = 3;  //optional
}

message DiscreteSpace {
	int32 n = 1;
}

message BoxSpace {
	float low = 1;
	float high = 2;
	Dtype dtype = 3;
	repeated uint32 shape = 4;
}

message TupleSpace {
	repeated SpaceDescription element = 1;
}

message DictSpace {
	repeated SpaceDescription element = 1;
}
//------------------------//

//----Data Containers-----//
message DataContainer {
	SpaceType type = 1;
	google.protobuf.Any data = 2;
	string name = 3; //optional
}

message DiscreteDataContainer {
	int32 data = 1;
}

message BoxDataContainer {
	Dtype dtype = 1;
	repeated uint32 shape = 2;

	repeated int32 intData = 3;
	repeated uint32 uintData = 4;
	repeated float floatData = 5;
	repeated double doubleData = 6;
}

message TupleDataContainer {
	repeated DataContainer element = 1;
}

message DictDataContainer {
	repeated DataContainer element = 1;
}
//------------------------//

//--------Messages--------//
message RequestMsg {
	MsgType type = 1;
	google.protobuf.Any msg = 2;
}

message ReplyMsg {
	MsgType type = 1;
	google.protobuf.Any msg = 2;
}

message InitializeRequest {
	double timeStep = 1;
	uint32 simSeed = 2;
}

message InitializeReply {
	bool done = 1;
	uint64 simProcessId = 2;
	uint64 wafShellProcessId = 3;
}

message GetActionSpaceRequest {
}

message GetObservationSpaceRequest {
}

message GetSpaceReply {
	SpaceDescription space = 1;
}

message GetIsGameOverRequest {
}

message GetIsGameOverReply {
	bool isGameOver = 1;

	enum Reason {
		SimulationEnd = 0;
		GameOver = 1;
	}
	Reason reason = 2;
}

message GetObservationRequest {
}

message GetObservationReply {
	DataContainer container = 1;
}

message GetRewardRequest {
}

message GetRewardReply {
	float reward = 1;
}

message GetExtraInfoRequest {
}

message GetExtraInfoReply {
	string info = 1;
}

message SetActionRequest {
	DataContainer container = 1;
}

message SetActionReply {
	bool done = 1;
}

message StopEnvRequest {
}

message StopEnvReply {
	bool done = 1;
}
//------------------------//