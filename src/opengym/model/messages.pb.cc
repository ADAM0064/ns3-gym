// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace ns3opengym {
class DiscreteSpaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscreteSpace>
      _instance;
} _DiscreteSpace_default_instance_;
class BoxSpaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoxSpace>
      _instance;
} _BoxSpace_default_instance_;
class RequestMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestMsg>
      _instance;
} _RequestMsg_default_instance_;
class ReplyMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReplyMsg>
      _instance;
} _ReplyMsg_default_instance_;
class InitializeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitializeRequest>
      _instance;
} _InitializeRequest_default_instance_;
class InitializeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitializeReply>
      _instance;
} _InitializeReply_default_instance_;
class GetActionSpaceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetActionSpaceRequest>
      _instance;
} _GetActionSpaceRequest_default_instance_;
class GetObservationSpaceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetObservationSpaceRequest>
      _instance;
} _GetObservationSpaceRequest_default_instance_;
class GetSpaceReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSpaceReply>
      _instance;
} _GetSpaceReply_default_instance_;
class GetIsGameOverRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIsGameOverRequest>
      _instance;
} _GetIsGameOverRequest_default_instance_;
class GetIsGameOverReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetIsGameOverReply>
      _instance;
} _GetIsGameOverReply_default_instance_;
class GetObservationRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetObservationRequest>
      _instance;
} _GetObservationRequest_default_instance_;
class GetObservationReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetObservationReply>
      _instance;
} _GetObservationReply_default_instance_;
class GetRewardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRewardRequest>
      _instance;
} _GetRewardRequest_default_instance_;
class GetRewardReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRewardReply>
      _instance;
} _GetRewardReply_default_instance_;
class SetActionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetActionRequest>
      _instance;
} _SetActionRequest_default_instance_;
class SetActionReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetActionReply>
      _instance;
} _SetActionReply_default_instance_;
}  // namespace ns3opengym
namespace protobuf_messages_2eproto {
static void InitDefaultsDiscreteSpace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_DiscreteSpace_default_instance_;
    new (ptr) ::ns3opengym::DiscreteSpace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::DiscreteSpace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiscreteSpace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscreteSpace}, {}};

static void InitDefaultsBoxSpace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_BoxSpace_default_instance_;
    new (ptr) ::ns3opengym::BoxSpace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::BoxSpace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BoxSpace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBoxSpace}, {}};

static void InitDefaultsRequestMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_RequestMsg_default_instance_;
    new (ptr) ::ns3opengym::RequestMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::RequestMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RequestMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRequestMsg}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsReplyMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_ReplyMsg_default_instance_;
    new (ptr) ::ns3opengym::ReplyMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::ReplyMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReplyMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReplyMsg}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsInitializeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_InitializeRequest_default_instance_;
    new (ptr) ::ns3opengym::InitializeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::InitializeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InitializeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInitializeRequest}, {}};

static void InitDefaultsInitializeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_InitializeReply_default_instance_;
    new (ptr) ::ns3opengym::InitializeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::InitializeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InitializeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInitializeReply}, {}};

static void InitDefaultsGetActionSpaceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetActionSpaceRequest_default_instance_;
    new (ptr) ::ns3opengym::GetActionSpaceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetActionSpaceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetActionSpaceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetActionSpaceRequest}, {}};

static void InitDefaultsGetObservationSpaceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetObservationSpaceRequest_default_instance_;
    new (ptr) ::ns3opengym::GetObservationSpaceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetObservationSpaceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetObservationSpaceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetObservationSpaceRequest}, {}};

static void InitDefaultsGetSpaceReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetSpaceReply_default_instance_;
    new (ptr) ::ns3opengym::GetSpaceReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetSpaceReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetSpaceReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetSpaceReply}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsGetIsGameOverRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetIsGameOverRequest_default_instance_;
    new (ptr) ::ns3opengym::GetIsGameOverRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetIsGameOverRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetIsGameOverRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetIsGameOverRequest}, {}};

static void InitDefaultsGetIsGameOverReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetIsGameOverReply_default_instance_;
    new (ptr) ::ns3opengym::GetIsGameOverReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetIsGameOverReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetIsGameOverReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetIsGameOverReply}, {}};

static void InitDefaultsGetObservationRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetObservationRequest_default_instance_;
    new (ptr) ::ns3opengym::GetObservationRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetObservationRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetObservationRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetObservationRequest}, {}};

static void InitDefaultsGetObservationReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetObservationReply_default_instance_;
    new (ptr) ::ns3opengym::GetObservationReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetObservationReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetObservationReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetObservationReply}, {}};

static void InitDefaultsGetRewardRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetRewardRequest_default_instance_;
    new (ptr) ::ns3opengym::GetRewardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetRewardRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRewardRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRewardRequest}, {}};

static void InitDefaultsGetRewardReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_GetRewardReply_default_instance_;
    new (ptr) ::ns3opengym::GetRewardReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::GetRewardReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRewardReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRewardReply}, {}};

static void InitDefaultsSetActionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_SetActionRequest_default_instance_;
    new (ptr) ::ns3opengym::SetActionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::SetActionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetActionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetActionRequest}, {}};

static void InitDefaultsSetActionReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ns3opengym::_SetActionReply_default_instance_;
    new (ptr) ::ns3opengym::SetActionReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ns3opengym::SetActionReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetActionReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetActionReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DiscreteSpace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoxSpace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReplyMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InitializeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InitializeReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetActionSpaceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetObservationSpaceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSpaceReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetIsGameOverRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetIsGameOverReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetObservationRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetObservationReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRewardRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRewardReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetActionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetActionReply.base);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DiscreteSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::DiscreteSpace, n_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::BoxSpace, shape_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::RequestMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::RequestMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::RequestMsg, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::ReplyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::ReplyMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::ReplyMsg, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::InitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::InitializeRequest, timestep_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::InitializeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::InitializeReply, done_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetActionSpaceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetObservationSpaceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetSpaceReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetSpaceReply, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetSpaceReply, space_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetIsGameOverRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetIsGameOverReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetIsGameOverReply, isgameover_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetObservationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetObservationReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetObservationReply, observation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetRewardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetRewardReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::GetRewardReply, reward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SetActionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SetActionRequest, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SetActionReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ns3opengym::SetActionReply, done_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ns3opengym::DiscreteSpace)},
  { 6, -1, sizeof(::ns3opengym::BoxSpace)},
  { 15, -1, sizeof(::ns3opengym::RequestMsg)},
  { 22, -1, sizeof(::ns3opengym::ReplyMsg)},
  { 29, -1, sizeof(::ns3opengym::InitializeRequest)},
  { 35, -1, sizeof(::ns3opengym::InitializeReply)},
  { 41, -1, sizeof(::ns3opengym::GetActionSpaceRequest)},
  { 46, -1, sizeof(::ns3opengym::GetObservationSpaceRequest)},
  { 51, -1, sizeof(::ns3opengym::GetSpaceReply)},
  { 58, -1, sizeof(::ns3opengym::GetIsGameOverRequest)},
  { 63, -1, sizeof(::ns3opengym::GetIsGameOverReply)},
  { 69, -1, sizeof(::ns3opengym::GetObservationRequest)},
  { 74, -1, sizeof(::ns3opengym::GetObservationReply)},
  { 80, -1, sizeof(::ns3opengym::GetRewardRequest)},
  { 85, -1, sizeof(::ns3opengym::GetRewardReply)},
  { 91, -1, sizeof(::ns3opengym::SetActionRequest)},
  { 97, -1, sizeof(::ns3opengym::SetActionReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_DiscreteSpace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_BoxSpace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_RequestMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_ReplyMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_InitializeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_InitializeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetActionSpaceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetObservationSpaceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetSpaceReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetIsGameOverRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetIsGameOverReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetObservationRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetObservationReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetRewardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_GetRewardReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_SetActionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ns3opengym::_SetActionReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016messages.proto\022\nns3opengym\032\031google/pro"
      "tobuf/any.proto\"\032\n\rDiscreteSpace\022\t\n\001n\030\001 "
      "\001(\005\"V\n\010BoxSpace\022\013\n\003low\030\001 \001(\002\022\014\n\004high\030\002 \001"
      "(\002\022 \n\005dtype\030\003 \001(\0162\021.ns3opengym.Dtype\022\r\n\005"
      "shape\030\004 \003(\005\"R\n\nRequestMsg\022!\n\004type\030\001 \001(\0162"
      "\023.ns3opengym.MsgType\022!\n\003msg\030\002 \001(\0132\024.goog"
      "le.protobuf.Any\"P\n\010ReplyMsg\022!\n\004type\030\001 \001("
      "\0162\023.ns3opengym.MsgType\022!\n\003msg\030\002 \001(\0132\024.go"
      "ogle.protobuf.Any\"%\n\021InitializeRequest\022\020"
      "\n\010timeStep\030\001 \001(\001\"\037\n\017InitializeReply\022\014\n\004d"
      "one\030\001 \001(\010\"\027\n\025GetActionSpaceRequest\"\034\n\032Ge"
      "tObservationSpaceRequest\"Y\n\rGetSpaceRepl"
      "y\022#\n\004type\030\001 \001(\0162\025.ns3opengym.SpaceType\022#"
      "\n\005space\030\002 \001(\0132\024.google.protobuf.Any\"\026\n\024G"
      "etIsGameOverRequest\"(\n\022GetIsGameOverRepl"
      "y\022\022\n\nisGameOver\030\001 \001(\010\"\027\n\025GetObservationR"
      "equest\"*\n\023GetObservationReply\022\023\n\013observa"
      "tion\030\001 \001(\t\"\022\n\020GetRewardRequest\" \n\016GetRew"
      "ardReply\022\016\n\006reward\030\001 \001(\002\"\"\n\020SetActionReq"
      "uest\022\016\n\006action\030\001 \001(\t\"\036\n\016SetActionReply\022\014"
      "\n\004done\030\001 \001(\010*\200\001\n\007MsgType\022\013\n\007Unknown\020\000\022\010\n"
      "\004Init\020\001\022\017\n\013ActionSpace\020\002\022\024\n\020ObservationS"
      "pace\020\003\022\016\n\nIsGameOver\020\004\022\017\n\013Observation\020\005\022"
      "\n\n\006Reward\020\006\022\n\n\006Action\020\007*\"\n\tSpaceType\022\014\n\010"
      "Discrete\020\000\022\007\n\003Box\020\001*1\n\005Dtype\022\007\n\003INT\020\000\022\010\n"
      "\004UINT\020\001\022\t\n\005FLOAT\020\002\022\n\n\006DOUBLE\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1038);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2eproto
namespace ns3opengym {
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2eproto::file_level_enum_descriptors[0];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SpaceType_descriptor() {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2eproto::file_level_enum_descriptors[1];
}
bool SpaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Dtype_descriptor() {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2eproto::file_level_enum_descriptors[2];
}
bool Dtype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void DiscreteSpace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscreteSpace::kNFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscreteSpace::DiscreteSpace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_DiscreteSpace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.DiscreteSpace)
}
DiscreteSpace::DiscreteSpace(const DiscreteSpace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  n_ = from.n_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.DiscreteSpace)
}

void DiscreteSpace::SharedCtor() {
  n_ = 0;
}

DiscreteSpace::~DiscreteSpace() {
  // @@protoc_insertion_point(destructor:ns3opengym.DiscreteSpace)
  SharedDtor();
}

void DiscreteSpace::SharedDtor() {
}

void DiscreteSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscreteSpace::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscreteSpace& DiscreteSpace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_DiscreteSpace.base);
  return *internal_default_instance();
}


void DiscreteSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.DiscreteSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  n_ = 0;
  _internal_metadata_.Clear();
}

bool DiscreteSpace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.DiscreteSpace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.DiscreteSpace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.DiscreteSpace)
  return false;
#undef DO_
}

void DiscreteSpace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.DiscreteSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 n = 1;
  if (this->n() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->n(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.DiscreteSpace)
}

::google::protobuf::uint8* DiscreteSpace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.DiscreteSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 n = 1;
  if (this->n() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->n(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.DiscreteSpace)
  return target;
}

size_t DiscreteSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.DiscreteSpace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 n = 1;
  if (this->n() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->n());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscreteSpace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.DiscreteSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscreteSpace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscreteSpace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.DiscreteSpace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.DiscreteSpace)
    MergeFrom(*source);
  }
}

void DiscreteSpace::MergeFrom(const DiscreteSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.DiscreteSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.n() != 0) {
    set_n(from.n());
  }
}

void DiscreteSpace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.DiscreteSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscreteSpace::CopyFrom(const DiscreteSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.DiscreteSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscreteSpace::IsInitialized() const {
  return true;
}

void DiscreteSpace::Swap(DiscreteSpace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscreteSpace::InternalSwap(DiscreteSpace* other) {
  using std::swap;
  swap(n_, other->n_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscreteSpace::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoxSpace::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoxSpace::kLowFieldNumber;
const int BoxSpace::kHighFieldNumber;
const int BoxSpace::kDtypeFieldNumber;
const int BoxSpace::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoxSpace::BoxSpace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_BoxSpace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.BoxSpace)
}
BoxSpace::BoxSpace(const BoxSpace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&low_, &from.low_,
    static_cast<size_t>(reinterpret_cast<char*>(&dtype_) -
    reinterpret_cast<char*>(&low_)) + sizeof(dtype_));
  // @@protoc_insertion_point(copy_constructor:ns3opengym.BoxSpace)
}

void BoxSpace::SharedCtor() {
  ::memset(&low_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dtype_) -
      reinterpret_cast<char*>(&low_)) + sizeof(dtype_));
}

BoxSpace::~BoxSpace() {
  // @@protoc_insertion_point(destructor:ns3opengym.BoxSpace)
  SharedDtor();
}

void BoxSpace::SharedDtor() {
}

void BoxSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BoxSpace::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoxSpace& BoxSpace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_BoxSpace.base);
  return *internal_default_instance();
}


void BoxSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.BoxSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  ::memset(&low_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dtype_) -
      reinterpret_cast<char*>(&low_)) + sizeof(dtype_));
  _internal_metadata_.Clear();
}

bool BoxSpace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.BoxSpace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float low = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float high = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ns3opengym.Dtype dtype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::ns3opengym::Dtype >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 shape = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_shape())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_shape())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.BoxSpace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.BoxSpace)
  return false;
#undef DO_
}

void BoxSpace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.BoxSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float low = 1;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->low(), output);
  }

  // float high = 2;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->high(), output);
  }

  // .ns3opengym.Dtype dtype = 3;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->dtype(), output);
  }

  // repeated int32 shape = 4;
  if (this->shape_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _shape_cached_byte_size_));
  }
  for (int i = 0, n = this->shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->shape(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.BoxSpace)
}

::google::protobuf::uint8* BoxSpace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.BoxSpace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float low = 1;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->low(), target);
  }

  // float high = 2;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->high(), target);
  }

  // .ns3opengym.Dtype dtype = 3;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->dtype(), target);
  }

  // repeated int32 shape = 4;
  if (this->shape_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _shape_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->shape_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.BoxSpace)
  return target;
}

size_t BoxSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.BoxSpace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 shape = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _shape_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // float low = 1;
  if (this->low() != 0) {
    total_size += 1 + 4;
  }

  // float high = 2;
  if (this->high() != 0) {
    total_size += 1 + 4;
  }

  // .ns3opengym.Dtype dtype = 3;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoxSpace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.BoxSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const BoxSpace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoxSpace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.BoxSpace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.BoxSpace)
    MergeFrom(*source);
  }
}

void BoxSpace::MergeFrom(const BoxSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.BoxSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.low() != 0) {
    set_low(from.low());
  }
  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
}

void BoxSpace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.BoxSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxSpace::CopyFrom(const BoxSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.BoxSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxSpace::IsInitialized() const {
  return true;
}

void BoxSpace::Swap(BoxSpace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoxSpace::InternalSwap(BoxSpace* other) {
  using std::swap;
  shape_.InternalSwap(&other->shape_);
  swap(low_, other->low_);
  swap(high_, other->high_);
  swap(dtype_, other->dtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BoxSpace::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestMsg::InitAsDefaultInstance() {
  ::ns3opengym::_RequestMsg_default_instance_._instance.get_mutable()->msg_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void RequestMsg::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestMsg::kTypeFieldNumber;
const int RequestMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestMsg::RequestMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_RequestMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.RequestMsg)
}
RequestMsg::RequestMsg(const RequestMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::google::protobuf::Any(*from.msg_);
  } else {
    msg_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.RequestMsg)
}

void RequestMsg::SharedCtor() {
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(type_));
}

RequestMsg::~RequestMsg() {
  // @@protoc_insertion_point(destructor:ns3opengym.RequestMsg)
  SharedDtor();
}

void RequestMsg::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void RequestMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestMsg::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestMsg& RequestMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_RequestMsg.base);
  return *internal_default_instance();
}


void RequestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.RequestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool RequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.RequestMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ns3opengym.MsgType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ns3opengym::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.RequestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.RequestMsg)
  return false;
#undef DO_
}

void RequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.RequestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.MsgType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .google.protobuf.Any msg = 2;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.RequestMsg)
}

::google::protobuf::uint8* RequestMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.RequestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.MsgType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .google.protobuf.Any msg = 2;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_msg(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.RequestMsg)
  return target;
}

size_t RequestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.RequestMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any msg = 2;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_);
  }

  // .ns3opengym.MsgType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.RequestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.RequestMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.RequestMsg)
    MergeFrom(*source);
  }
}

void RequestMsg::MergeFrom(const RequestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.RequestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    mutable_msg()->::google::protobuf::Any::MergeFrom(from.msg());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void RequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.RequestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMsg::CopyFrom(const RequestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.RequestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMsg::IsInitialized() const {
  return true;
}

void RequestMsg::Swap(RequestMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestMsg::InternalSwap(RequestMsg* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestMsg::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReplyMsg::InitAsDefaultInstance() {
  ::ns3opengym::_ReplyMsg_default_instance_._instance.get_mutable()->msg_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ReplyMsg::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyMsg::kTypeFieldNumber;
const int ReplyMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyMsg::ReplyMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_ReplyMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.ReplyMsg)
}
ReplyMsg::ReplyMsg(const ReplyMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::google::protobuf::Any(*from.msg_);
  } else {
    msg_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.ReplyMsg)
}

void ReplyMsg::SharedCtor() {
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(type_));
}

ReplyMsg::~ReplyMsg() {
  // @@protoc_insertion_point(destructor:ns3opengym.ReplyMsg)
  SharedDtor();
}

void ReplyMsg::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void ReplyMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReplyMsg::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReplyMsg& ReplyMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_ReplyMsg.base);
  return *internal_default_instance();
}


void ReplyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.ReplyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool ReplyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.ReplyMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ns3opengym.MsgType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ns3opengym::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.ReplyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.ReplyMsg)
  return false;
#undef DO_
}

void ReplyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.ReplyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.MsgType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .google.protobuf.Any msg = 2;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.ReplyMsg)
}

::google::protobuf::uint8* ReplyMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.ReplyMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.MsgType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .google.protobuf.Any msg = 2;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_msg(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.ReplyMsg)
  return target;
}

size_t ReplyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.ReplyMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any msg = 2;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msg_);
  }

  // .ns3opengym.MsgType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplyMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.ReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplyMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.ReplyMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.ReplyMsg)
    MergeFrom(*source);
  }
}

void ReplyMsg::MergeFrom(const ReplyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.ReplyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    mutable_msg()->::google::protobuf::Any::MergeFrom(from.msg());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ReplyMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.ReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyMsg::CopyFrom(const ReplyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.ReplyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyMsg::IsInitialized() const {
  return true;
}

void ReplyMsg::Swap(ReplyMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyMsg::InternalSwap(ReplyMsg* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReplyMsg::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InitializeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitializeRequest::kTimeStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitializeRequest::InitializeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_InitializeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.InitializeRequest)
}
InitializeRequest::InitializeRequest(const InitializeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestep_ = from.timestep_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.InitializeRequest)
}

void InitializeRequest::SharedCtor() {
  timestep_ = 0;
}

InitializeRequest::~InitializeRequest() {
  // @@protoc_insertion_point(destructor:ns3opengym.InitializeRequest)
  SharedDtor();
}

void InitializeRequest::SharedDtor() {
}

void InitializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InitializeRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InitializeRequest& InitializeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_InitializeRequest.base);
  return *internal_default_instance();
}


void InitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.InitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timestep_ = 0;
  _internal_metadata_.Clear();
}

bool InitializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.InitializeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timeStep = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.InitializeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.InitializeRequest)
  return false;
#undef DO_
}

void InitializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.InitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timeStep = 1;
  if (this->timestep() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestep(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.InitializeRequest)
}

::google::protobuf::uint8* InitializeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.InitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timeStep = 1;
  if (this->timestep() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestep(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.InitializeRequest)
  return target;
}

size_t InitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.InitializeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double timeStep = 1;
  if (this->timestep() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.InitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InitializeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitializeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.InitializeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.InitializeRequest)
    MergeFrom(*source);
  }
}

void InitializeRequest::MergeFrom(const InitializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.InitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestep() != 0) {
    set_timestep(from.timestep());
  }
}

void InitializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.InitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitializeRequest::CopyFrom(const InitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.InitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitializeRequest::IsInitialized() const {
  return true;
}

void InitializeRequest::Swap(InitializeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitializeRequest::InternalSwap(InitializeRequest* other) {
  using std::swap;
  swap(timestep_, other->timestep_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InitializeRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InitializeReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitializeReply::kDoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitializeReply::InitializeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_InitializeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.InitializeReply)
}
InitializeReply::InitializeReply(const InitializeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  done_ = from.done_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.InitializeReply)
}

void InitializeReply::SharedCtor() {
  done_ = false;
}

InitializeReply::~InitializeReply() {
  // @@protoc_insertion_point(destructor:ns3opengym.InitializeReply)
  SharedDtor();
}

void InitializeReply::SharedDtor() {
}

void InitializeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InitializeReply::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InitializeReply& InitializeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_InitializeReply.base);
  return *internal_default_instance();
}


void InitializeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.InitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  done_ = false;
  _internal_metadata_.Clear();
}

bool InitializeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.InitializeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool done = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &done_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.InitializeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.InitializeReply)
  return false;
#undef DO_
}

void InitializeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.InitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool done = 1;
  if (this->done() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->done(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.InitializeReply)
}

::google::protobuf::uint8* InitializeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.InitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool done = 1;
  if (this->done() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->done(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.InitializeReply)
  return target;
}

size_t InitializeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.InitializeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool done = 1;
  if (this->done() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitializeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.InitializeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const InitializeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitializeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.InitializeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.InitializeReply)
    MergeFrom(*source);
  }
}

void InitializeReply::MergeFrom(const InitializeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.InitializeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.done() != 0) {
    set_done(from.done());
  }
}

void InitializeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.InitializeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitializeReply::CopyFrom(const InitializeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.InitializeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitializeReply::IsInitialized() const {
  return true;
}

void InitializeReply::Swap(InitializeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitializeReply::InternalSwap(InitializeReply* other) {
  using std::swap;
  swap(done_, other->done_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InitializeReply::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetActionSpaceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetActionSpaceRequest::GetActionSpaceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetActionSpaceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetActionSpaceRequest)
}
GetActionSpaceRequest::GetActionSpaceRequest(const GetActionSpaceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetActionSpaceRequest)
}

void GetActionSpaceRequest::SharedCtor() {
}

GetActionSpaceRequest::~GetActionSpaceRequest() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetActionSpaceRequest)
  SharedDtor();
}

void GetActionSpaceRequest::SharedDtor() {
}

void GetActionSpaceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetActionSpaceRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetActionSpaceRequest& GetActionSpaceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetActionSpaceRequest.base);
  return *internal_default_instance();
}


void GetActionSpaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetActionSpaceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetActionSpaceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetActionSpaceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetActionSpaceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetActionSpaceRequest)
  return false;
#undef DO_
}

void GetActionSpaceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetActionSpaceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetActionSpaceRequest)
}

::google::protobuf::uint8* GetActionSpaceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetActionSpaceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetActionSpaceRequest)
  return target;
}

size_t GetActionSpaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetActionSpaceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActionSpaceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetActionSpaceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActionSpaceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetActionSpaceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetActionSpaceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetActionSpaceRequest)
    MergeFrom(*source);
  }
}

void GetActionSpaceRequest::MergeFrom(const GetActionSpaceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetActionSpaceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetActionSpaceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetActionSpaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActionSpaceRequest::CopyFrom(const GetActionSpaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetActionSpaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActionSpaceRequest::IsInitialized() const {
  return true;
}

void GetActionSpaceRequest::Swap(GetActionSpaceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetActionSpaceRequest::InternalSwap(GetActionSpaceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetActionSpaceRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetObservationSpaceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetObservationSpaceRequest::GetObservationSpaceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetObservationSpaceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetObservationSpaceRequest)
}
GetObservationSpaceRequest::GetObservationSpaceRequest(const GetObservationSpaceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetObservationSpaceRequest)
}

void GetObservationSpaceRequest::SharedCtor() {
}

GetObservationSpaceRequest::~GetObservationSpaceRequest() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetObservationSpaceRequest)
  SharedDtor();
}

void GetObservationSpaceRequest::SharedDtor() {
}

void GetObservationSpaceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetObservationSpaceRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetObservationSpaceRequest& GetObservationSpaceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetObservationSpaceRequest.base);
  return *internal_default_instance();
}


void GetObservationSpaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetObservationSpaceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetObservationSpaceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetObservationSpaceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetObservationSpaceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetObservationSpaceRequest)
  return false;
#undef DO_
}

void GetObservationSpaceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetObservationSpaceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetObservationSpaceRequest)
}

::google::protobuf::uint8* GetObservationSpaceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetObservationSpaceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetObservationSpaceRequest)
  return target;
}

size_t GetObservationSpaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetObservationSpaceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObservationSpaceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetObservationSpaceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObservationSpaceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetObservationSpaceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetObservationSpaceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetObservationSpaceRequest)
    MergeFrom(*source);
  }
}

void GetObservationSpaceRequest::MergeFrom(const GetObservationSpaceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetObservationSpaceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetObservationSpaceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetObservationSpaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObservationSpaceRequest::CopyFrom(const GetObservationSpaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetObservationSpaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObservationSpaceRequest::IsInitialized() const {
  return true;
}

void GetObservationSpaceRequest::Swap(GetObservationSpaceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetObservationSpaceRequest::InternalSwap(GetObservationSpaceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetObservationSpaceRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSpaceReply::InitAsDefaultInstance() {
  ::ns3opengym::_GetSpaceReply_default_instance_._instance.get_mutable()->space_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void GetSpaceReply::clear_space() {
  if (GetArenaNoVirtual() == NULL && space_ != NULL) {
    delete space_;
  }
  space_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSpaceReply::kTypeFieldNumber;
const int GetSpaceReply::kSpaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSpaceReply::GetSpaceReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetSpaceReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetSpaceReply)
}
GetSpaceReply::GetSpaceReply(const GetSpaceReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_space()) {
    space_ = new ::google::protobuf::Any(*from.space_);
  } else {
    space_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetSpaceReply)
}

void GetSpaceReply::SharedCtor() {
  ::memset(&space_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&space_)) + sizeof(type_));
}

GetSpaceReply::~GetSpaceReply() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetSpaceReply)
  SharedDtor();
}

void GetSpaceReply::SharedDtor() {
  if (this != internal_default_instance()) delete space_;
}

void GetSpaceReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetSpaceReply::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSpaceReply& GetSpaceReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetSpaceReply.base);
  return *internal_default_instance();
}


void GetSpaceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetSpaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && space_ != NULL) {
    delete space_;
  }
  space_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool GetSpaceReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetSpaceReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ns3opengym.SpaceType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ns3opengym::SpaceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any space = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_space()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetSpaceReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetSpaceReply)
  return false;
#undef DO_
}

void GetSpaceReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetSpaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .google.protobuf.Any space = 2;
  if (this->has_space()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_space(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetSpaceReply)
}

::google::protobuf::uint8* GetSpaceReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetSpaceReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .google.protobuf.Any space = 2;
  if (this->has_space()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_space(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetSpaceReply)
  return target;
}

size_t GetSpaceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetSpaceReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any space = 2;
  if (this->has_space()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *space_);
  }

  // .ns3opengym.SpaceType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSpaceReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetSpaceReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpaceReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSpaceReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetSpaceReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetSpaceReply)
    MergeFrom(*source);
  }
}

void GetSpaceReply::MergeFrom(const GetSpaceReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetSpaceReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_space()) {
    mutable_space()->::google::protobuf::Any::MergeFrom(from.space());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GetSpaceReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetSpaceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpaceReply::CopyFrom(const GetSpaceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetSpaceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpaceReply::IsInitialized() const {
  return true;
}

void GetSpaceReply::Swap(GetSpaceReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSpaceReply::InternalSwap(GetSpaceReply* other) {
  using std::swap;
  swap(space_, other->space_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetSpaceReply::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetIsGameOverRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIsGameOverRequest::GetIsGameOverRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetIsGameOverRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetIsGameOverRequest)
}
GetIsGameOverRequest::GetIsGameOverRequest(const GetIsGameOverRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetIsGameOverRequest)
}

void GetIsGameOverRequest::SharedCtor() {
}

GetIsGameOverRequest::~GetIsGameOverRequest() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetIsGameOverRequest)
  SharedDtor();
}

void GetIsGameOverRequest::SharedDtor() {
}

void GetIsGameOverRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetIsGameOverRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIsGameOverRequest& GetIsGameOverRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetIsGameOverRequest.base);
  return *internal_default_instance();
}


void GetIsGameOverRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetIsGameOverRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetIsGameOverRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetIsGameOverRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetIsGameOverRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetIsGameOverRequest)
  return false;
#undef DO_
}

void GetIsGameOverRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetIsGameOverRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetIsGameOverRequest)
}

::google::protobuf::uint8* GetIsGameOverRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetIsGameOverRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetIsGameOverRequest)
  return target;
}

size_t GetIsGameOverRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetIsGameOverRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIsGameOverRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetIsGameOverRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIsGameOverRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIsGameOverRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetIsGameOverRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetIsGameOverRequest)
    MergeFrom(*source);
  }
}

void GetIsGameOverRequest::MergeFrom(const GetIsGameOverRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetIsGameOverRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetIsGameOverRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetIsGameOverRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIsGameOverRequest::CopyFrom(const GetIsGameOverRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetIsGameOverRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIsGameOverRequest::IsInitialized() const {
  return true;
}

void GetIsGameOverRequest::Swap(GetIsGameOverRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIsGameOverRequest::InternalSwap(GetIsGameOverRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetIsGameOverRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetIsGameOverReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetIsGameOverReply::kIsGameOverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetIsGameOverReply::GetIsGameOverReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetIsGameOverReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetIsGameOverReply)
}
GetIsGameOverReply::GetIsGameOverReply(const GetIsGameOverReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  isgameover_ = from.isgameover_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetIsGameOverReply)
}

void GetIsGameOverReply::SharedCtor() {
  isgameover_ = false;
}

GetIsGameOverReply::~GetIsGameOverReply() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetIsGameOverReply)
  SharedDtor();
}

void GetIsGameOverReply::SharedDtor() {
}

void GetIsGameOverReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetIsGameOverReply::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetIsGameOverReply& GetIsGameOverReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetIsGameOverReply.base);
  return *internal_default_instance();
}


void GetIsGameOverReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetIsGameOverReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  isgameover_ = false;
  _internal_metadata_.Clear();
}

bool GetIsGameOverReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetIsGameOverReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isGameOver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isgameover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetIsGameOverReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetIsGameOverReply)
  return false;
#undef DO_
}

void GetIsGameOverReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetIsGameOverReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isGameOver = 1;
  if (this->isgameover() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isgameover(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetIsGameOverReply)
}

::google::protobuf::uint8* GetIsGameOverReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetIsGameOverReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isGameOver = 1;
  if (this->isgameover() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isgameover(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetIsGameOverReply)
  return target;
}

size_t GetIsGameOverReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetIsGameOverReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool isGameOver = 1;
  if (this->isgameover() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetIsGameOverReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetIsGameOverReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetIsGameOverReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetIsGameOverReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetIsGameOverReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetIsGameOverReply)
    MergeFrom(*source);
  }
}

void GetIsGameOverReply::MergeFrom(const GetIsGameOverReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetIsGameOverReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isgameover() != 0) {
    set_isgameover(from.isgameover());
  }
}

void GetIsGameOverReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetIsGameOverReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetIsGameOverReply::CopyFrom(const GetIsGameOverReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetIsGameOverReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIsGameOverReply::IsInitialized() const {
  return true;
}

void GetIsGameOverReply::Swap(GetIsGameOverReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetIsGameOverReply::InternalSwap(GetIsGameOverReply* other) {
  using std::swap;
  swap(isgameover_, other->isgameover_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetIsGameOverReply::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetObservationRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetObservationRequest::GetObservationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetObservationRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetObservationRequest)
}
GetObservationRequest::GetObservationRequest(const GetObservationRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetObservationRequest)
}

void GetObservationRequest::SharedCtor() {
}

GetObservationRequest::~GetObservationRequest() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetObservationRequest)
  SharedDtor();
}

void GetObservationRequest::SharedDtor() {
}

void GetObservationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetObservationRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetObservationRequest& GetObservationRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetObservationRequest.base);
  return *internal_default_instance();
}


void GetObservationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetObservationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetObservationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetObservationRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetObservationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetObservationRequest)
  return false;
#undef DO_
}

void GetObservationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetObservationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetObservationRequest)
}

::google::protobuf::uint8* GetObservationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetObservationRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetObservationRequest)
  return target;
}

size_t GetObservationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetObservationRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObservationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetObservationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObservationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetObservationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetObservationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetObservationRequest)
    MergeFrom(*source);
  }
}

void GetObservationRequest::MergeFrom(const GetObservationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetObservationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetObservationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetObservationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObservationRequest::CopyFrom(const GetObservationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetObservationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObservationRequest::IsInitialized() const {
  return true;
}

void GetObservationRequest::Swap(GetObservationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetObservationRequest::InternalSwap(GetObservationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetObservationRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetObservationReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetObservationReply::kObservationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetObservationReply::GetObservationReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetObservationReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetObservationReply)
}
GetObservationReply::GetObservationReply(const GetObservationReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  observation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.observation().size() > 0) {
    observation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.observation_);
  }
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetObservationReply)
}

void GetObservationReply::SharedCtor() {
  observation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetObservationReply::~GetObservationReply() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetObservationReply)
  SharedDtor();
}

void GetObservationReply::SharedDtor() {
  observation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetObservationReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetObservationReply::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetObservationReply& GetObservationReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetObservationReply.base);
  return *internal_default_instance();
}


void GetObservationReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetObservationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  observation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetObservationReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetObservationReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string observation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_observation()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->observation().data(), static_cast<int>(this->observation().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ns3opengym.GetObservationReply.observation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetObservationReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetObservationReply)
  return false;
#undef DO_
}

void GetObservationReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetObservationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string observation = 1;
  if (this->observation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->observation().data(), static_cast<int>(this->observation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.GetObservationReply.observation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->observation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetObservationReply)
}

::google::protobuf::uint8* GetObservationReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetObservationReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string observation = 1;
  if (this->observation().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->observation().data(), static_cast<int>(this->observation().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.GetObservationReply.observation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->observation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetObservationReply)
  return target;
}

size_t GetObservationReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetObservationReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string observation = 1;
  if (this->observation().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->observation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObservationReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetObservationReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObservationReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetObservationReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetObservationReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetObservationReply)
    MergeFrom(*source);
  }
}

void GetObservationReply::MergeFrom(const GetObservationReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetObservationReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.observation().size() > 0) {

    observation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.observation_);
  }
}

void GetObservationReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetObservationReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObservationReply::CopyFrom(const GetObservationReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetObservationReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObservationReply::IsInitialized() const {
  return true;
}

void GetObservationReply::Swap(GetObservationReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetObservationReply::InternalSwap(GetObservationReply* other) {
  using std::swap;
  observation_.Swap(&other->observation_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetObservationReply::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRewardRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRewardRequest::GetRewardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetRewardRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetRewardRequest)
}
GetRewardRequest::GetRewardRequest(const GetRewardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetRewardRequest)
}

void GetRewardRequest::SharedCtor() {
}

GetRewardRequest::~GetRewardRequest() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetRewardRequest)
  SharedDtor();
}

void GetRewardRequest::SharedDtor() {
}

void GetRewardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRewardRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRewardRequest& GetRewardRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetRewardRequest.base);
  return *internal_default_instance();
}


void GetRewardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetRewardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetRewardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetRewardRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetRewardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetRewardRequest)
  return false;
#undef DO_
}

void GetRewardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetRewardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetRewardRequest)
}

::google::protobuf::uint8* GetRewardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetRewardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetRewardRequest)
  return target;
}

size_t GetRewardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetRewardRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRewardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRewardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRewardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetRewardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetRewardRequest)
    MergeFrom(*source);
  }
}

void GetRewardRequest::MergeFrom(const GetRewardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetRewardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetRewardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRewardRequest::CopyFrom(const GetRewardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetRewardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRewardRequest::IsInitialized() const {
  return true;
}

void GetRewardRequest::Swap(GetRewardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRewardRequest::InternalSwap(GetRewardRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRewardRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRewardReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRewardReply::kRewardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRewardReply::GetRewardReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_GetRewardReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.GetRewardReply)
}
GetRewardReply::GetRewardReply(const GetRewardReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_ = from.reward_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.GetRewardReply)
}

void GetRewardReply::SharedCtor() {
  reward_ = 0;
}

GetRewardReply::~GetRewardReply() {
  // @@protoc_insertion_point(destructor:ns3opengym.GetRewardReply)
  SharedDtor();
}

void GetRewardReply::SharedDtor() {
}

void GetRewardReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRewardReply::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRewardReply& GetRewardReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_GetRewardReply.base);
  return *internal_default_instance();
}


void GetRewardReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.GetRewardReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward_ = 0;
  _internal_metadata_.Clear();
}

bool GetRewardReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.GetRewardReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float reward = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.GetRewardReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.GetRewardReply)
  return false;
#undef DO_
}

void GetRewardReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.GetRewardReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float reward = 1;
  if (this->reward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->reward(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.GetRewardReply)
}

::google::protobuf::uint8* GetRewardReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.GetRewardReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float reward = 1;
  if (this->reward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->reward(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.GetRewardReply)
  return target;
}

size_t GetRewardReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.GetRewardReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float reward = 1;
  if (this->reward() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRewardReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.GetRewardReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRewardReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRewardReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.GetRewardReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.GetRewardReply)
    MergeFrom(*source);
  }
}

void GetRewardReply::MergeFrom(const GetRewardReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.GetRewardReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reward() != 0) {
    set_reward(from.reward());
  }
}

void GetRewardReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.GetRewardReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRewardReply::CopyFrom(const GetRewardReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.GetRewardReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRewardReply::IsInitialized() const {
  return true;
}

void GetRewardReply::Swap(GetRewardReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRewardReply::InternalSwap(GetRewardReply* other) {
  using std::swap;
  swap(reward_, other->reward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRewardReply::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetActionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetActionRequest::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetActionRequest::SetActionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_SetActionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.SetActionRequest)
}
SetActionRequest::SetActionRequest(const SetActionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.action().size() > 0) {
    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  // @@protoc_insertion_point(copy_constructor:ns3opengym.SetActionRequest)
}

void SetActionRequest::SharedCtor() {
  action_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetActionRequest::~SetActionRequest() {
  // @@protoc_insertion_point(destructor:ns3opengym.SetActionRequest)
  SharedDtor();
}

void SetActionRequest::SharedDtor() {
  action_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetActionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetActionRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetActionRequest& SetActionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_SetActionRequest.base);
  return *internal_default_instance();
}


void SetActionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.SetActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetActionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.SetActionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->action().data(), static_cast<int>(this->action().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ns3opengym.SetActionRequest.action"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.SetActionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.SetActionRequest)
  return false;
#undef DO_
}

void SetActionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.SetActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.SetActionRequest.action");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.SetActionRequest)
}

::google::protobuf::uint8* SetActionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.SetActionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->action().data(), static_cast<int>(this->action().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ns3opengym.SetActionRequest.action");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.SetActionRequest)
  return target;
}

size_t SetActionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.SetActionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.SetActionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetActionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.SetActionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.SetActionRequest)
    MergeFrom(*source);
  }
}

void SetActionRequest::MergeFrom(const SetActionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.SetActionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
}

void SetActionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.SetActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActionRequest::CopyFrom(const SetActionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.SetActionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActionRequest::IsInitialized() const {
  return true;
}

void SetActionRequest::Swap(SetActionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetActionRequest::InternalSwap(SetActionRequest* other) {
  using std::swap;
  action_.Swap(&other->action_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetActionRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetActionReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetActionReply::kDoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetActionReply::SetActionReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_SetActionReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ns3opengym.SetActionReply)
}
SetActionReply::SetActionReply(const SetActionReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  done_ = from.done_;
  // @@protoc_insertion_point(copy_constructor:ns3opengym.SetActionReply)
}

void SetActionReply::SharedCtor() {
  done_ = false;
}

SetActionReply::~SetActionReply() {
  // @@protoc_insertion_point(destructor:ns3opengym.SetActionReply)
  SharedDtor();
}

void SetActionReply::SharedDtor() {
}

void SetActionReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetActionReply::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetActionReply& SetActionReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_SetActionReply.base);
  return *internal_default_instance();
}


void SetActionReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ns3opengym.SetActionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  done_ = false;
  _internal_metadata_.Clear();
}

bool SetActionReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ns3opengym.SetActionReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool done = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &done_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ns3opengym.SetActionReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ns3opengym.SetActionReply)
  return false;
#undef DO_
}

void SetActionReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ns3opengym.SetActionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool done = 1;
  if (this->done() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->done(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ns3opengym.SetActionReply)
}

::google::protobuf::uint8* SetActionReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ns3opengym.SetActionReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool done = 1;
  if (this->done() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->done(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ns3opengym.SetActionReply)
  return target;
}

size_t SetActionReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ns3opengym.SetActionReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool done = 1;
  if (this->done() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetActionReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ns3opengym.SetActionReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SetActionReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetActionReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ns3opengym.SetActionReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ns3opengym.SetActionReply)
    MergeFrom(*source);
  }
}

void SetActionReply::MergeFrom(const SetActionReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ns3opengym.SetActionReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.done() != 0) {
    set_done(from.done());
  }
}

void SetActionReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ns3opengym.SetActionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetActionReply::CopyFrom(const SetActionReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ns3opengym.SetActionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetActionReply::IsInitialized() const {
  return true;
}

void SetActionReply::Swap(SetActionReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetActionReply::InternalSwap(SetActionReply* other) {
  using std::swap;
  swap(done_, other->done_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetActionReply::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ns3opengym
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::DiscreteSpace* Arena::CreateMaybeMessage< ::ns3opengym::DiscreteSpace >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::DiscreteSpace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::BoxSpace* Arena::CreateMaybeMessage< ::ns3opengym::BoxSpace >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::BoxSpace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::RequestMsg* Arena::CreateMaybeMessage< ::ns3opengym::RequestMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::RequestMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::ReplyMsg* Arena::CreateMaybeMessage< ::ns3opengym::ReplyMsg >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::ReplyMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::InitializeRequest* Arena::CreateMaybeMessage< ::ns3opengym::InitializeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::InitializeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::InitializeReply* Arena::CreateMaybeMessage< ::ns3opengym::InitializeReply >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::InitializeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetActionSpaceRequest* Arena::CreateMaybeMessage< ::ns3opengym::GetActionSpaceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetActionSpaceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetObservationSpaceRequest* Arena::CreateMaybeMessage< ::ns3opengym::GetObservationSpaceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetObservationSpaceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetSpaceReply* Arena::CreateMaybeMessage< ::ns3opengym::GetSpaceReply >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetSpaceReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetIsGameOverRequest* Arena::CreateMaybeMessage< ::ns3opengym::GetIsGameOverRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetIsGameOverRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetIsGameOverReply* Arena::CreateMaybeMessage< ::ns3opengym::GetIsGameOverReply >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetIsGameOverReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetObservationRequest* Arena::CreateMaybeMessage< ::ns3opengym::GetObservationRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetObservationRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetObservationReply* Arena::CreateMaybeMessage< ::ns3opengym::GetObservationReply >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetObservationReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetRewardRequest* Arena::CreateMaybeMessage< ::ns3opengym::GetRewardRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetRewardRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::GetRewardReply* Arena::CreateMaybeMessage< ::ns3opengym::GetRewardReply >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::GetRewardReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::SetActionRequest* Arena::CreateMaybeMessage< ::ns3opengym::SetActionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::SetActionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ns3opengym::SetActionReply* Arena::CreateMaybeMessage< ::ns3opengym::SetActionReply >(Arena* arena) {
  return Arena::CreateInternal< ::ns3opengym::SetActionReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
